#!/bin/bash

# pass2csv
# Convert passwords stored using the `pass` password manager into a KeePass-compatible format

# This script is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This script is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this script. If not, see <https://www.gnu.org/licenses/>.

#THREADS="$(nproc)"
THREADS=8

[ -z "$PASS_PATH" ] && PASS_PATH="$HOME/.password-store"

process_entry() {
	local show_output
	show_output=$(pass show "$1" 2>&1)

	if grep -q "gpg:" <<< "$show_output"; then
		return
	fi

	line_count=$(echo "$show_output" | wc -l)

	group="$(dirname "$1")"
	title="$(basename "$1")"

	if [ "$line_count" -eq 1 ]; then
		username="$(basename "$1")"
		password="$(pass "$1")"
		url="$(dirname "$1")"
	else
		if grep -q '(?<=^user: ).*' <<< "$show_output"; then
			username="$(grep -oP '(?<=^user: ).*' <<< "$show_output")"
		else
			username="$(basename "$1")"
		fi
		if grep -q '(?<=^password: ).*' <<< "$show_output"; then
			password="$(<<< "$show_output" grep -oP '(?<=^password: ).*')"
		else
			password="$(<<< "$show_output" head -1)"
		fi
		url="$(grep -oP '(?<=^url: ).*' <<< "$show_output")"
		note="$(grep -oP '(?<=^note: ).*' <<< "$show_output")"
	fi
	echo "\"$group\";\"$title\";\"$username\";\"${password//\"/\\\"}\";\"$url\";\"$note\""
}

export -f process_entry


echo '"Group";"Title";"Username";"Password";"URL";"Notes"'

if [ ! -d "$PASS_PATH" ]; then
	echo "The password store '$PASS_PATH' does not exist or is inaccessible."
fi

find "$PASS_PATH" \
	-type d -name '.git' -prune \
	-o -type f -name '*.gpg' -print0 \
	| sed -z "s#$PASS_PATH##; s/.gpg$//" \
	| xargs -0 -P "$THREADS" -I{} -- \
		bash -c 'process_entry "$@"' _ "{}"
